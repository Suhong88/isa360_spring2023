use("test")
//create a copy of movies collection

const pipeline =[{
        $out: 'movies_copy'
    }]
db.movies.aggregate(pipeline)


//Deleting documents
//1. delete all movies where imdb rating is less than or equal to 2.



/* delete one with sort option
remove a movie with a high number of IMDB votes (>50000), 
a low average rating of 3, and the least awards won. 
display the title of deleted movie*/



/*Updating Document with updatedOne()
upate the movie Blacksmith Scene. change rate to PG-13 and year to 1894
display updated document */

db.movies_copy.find({"title": "Blacksmith Scene"})



/*update one document with additional options
 upate the movie Blacksmith Scene. Insert a new item latest into the document. */




/* exercise 5.03 upate the imdb and tomatometer rating (page 254)
upate imdb votes to 1565120, viewer's rating to 4.76 
and numbe of reviews to 733773 for movie The Godfather
display title, imdb and tomatoes rating*/


//updating multiple documents with updateMany()
//for movies, change rated from NOT RATED or Not Rated to UNRATED

db.movies_copy.distinct("rated")



//change all rated starting with TV (TV-14, TV-G, TV-MA, et.) to TV.

db.movies_copy.distinct("rated")



//increment $inc
//for The Godfather movie, increase viewer's rating by 1 and number of reviews by 10

db.movies.find({"title": "The Godfather"})



//multiply ($mul)
// for The Godfather movie, double the imdb rating




/*Rename ($rename)
rennme can be used to move one field to and from nested documents.
rename num_mflix_comments to comments and imdb.rating to rating */

db.movies_copy.findOne()




// move rating back into imdb category





/* current date #currentdate. Should not put quotation around created_date
add a new movie with a title "Tomorrow Never Die" and created_date as current date */

db.movies_copy.find({"title": "Tomorrow Never Die"})


//$currentDate will not work for inesertOne()

db.movies_copy.insertOne(
    {"title": "Tomorrow Never Die 2",
    $currentDate: {
        created_date: true,
        "last_updated.date": { $type: "date" },
        "last_updated.timestamp": { $type: "timestamp" }
      }}
)

//removing fields ($unset)
// 12. remove created_date from Tomorrow Never Die



//13. Remove imdb id from the movies collection

db.movies_copy.findOne()


